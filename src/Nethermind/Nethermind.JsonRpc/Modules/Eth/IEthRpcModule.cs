//  Copyright (c) 2021 Demerzel Solutions Limited
//  This file is part of the Nethermind library.
// 
//  The Nethermind library is free software: you can redistribute it and/or modify
//  it under the terms of the GNU Lesser General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
// 
//  The Nethermind library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  GNU Lesser General Public License for more details.
// 
//  You should have received a copy of the GNU Lesser General Public License
//  along with the Nethermind. If not, see <http://www.gnu.org/licenses/>.

using System.Collections.Generic;
using System.Threading.Tasks;
using Nethermind.Blockchain.Filters;
using Nethermind.Blockchain.Find;
using Nethermind.Core;
using Nethermind.Core.Crypto;
using Nethermind.Int256;
using Nethermind.JsonRpc.Data;
using Nethermind.State.Proofs;

namespace Nethermind.JsonRpc.Modules.Eth
{
    [RpcModule(ModuleType.Eth)]
    public interface IEthRpcModule : IRpcModule
    {
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Returns ChainID", 
            IsSharable = true, 
            ExampleResponse = "0x4")]
        ResultWrapper<ulong> eth_chainId();
        
        [JsonRpcMethod(IsImplemented = true,
            Description = "Returns ETH protocol version", 
            IsSharable = true, 
            ExampleResponse = "0x41")]
        ResultWrapper<string> eth_protocolVersion();
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Returns syncing status", 
            IsSharable = true, 
            ExampleResponse = "{\"startingBlock\":\"0x0\",\"currentBlock\":\"0x0\",\"highestBlock\":\"0x4df8a4\"},\"id\":1}")]
        ResultWrapper<SyncingResult> eth_syncing();
        
        [JsonRpcMethod(IsImplemented = false, 
            Description = "Returns miner's coinbase", 
            IsSharable = true, 
            ExampleResponse = "0x0000000000000000000000000000000000000000")]
        ResultWrapper<Address> eth_coinbase();
        
        [JsonRpcMethod(IsImplemented = false, Description = "Returns mining status", IsSharable = true)]
        ResultWrapper<bool?> eth_mining();
        
        [JsonRpcMethod(IsImplemented = false, Description = "Returns full state snapshot", IsSharable = true)]
        ResultWrapper<byte[]> eth_snapshot();
        
        [JsonRpcMethod(IsImplemented = false, 
            Description = "Returns mining hashrate", 
            IsSharable = true, 
            ExampleResponse = "0x0")]
        ResultWrapper<UInt256?> eth_hashrate();
        
        [JsonRpcMethod(IsImplemented = false, 
            Description = "Returns miner's gas price", 
            IsSharable = true, 
            ExampleResponse = "0x4a817c800" )]
        ResultWrapper<UInt256?> eth_gasPrice();
        
        [JsonRpcMethod(IsImplemented = false, 
            Description = "Returns accounts", 
            IsSharable = true, 
            ExampleResponse = "[\"0x9b96a7841d6e0b76872c85c86082959189a27342\"]")]
        ResultWrapper<IEnumerable<Address>> eth_accounts();
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Returns current block number", 
            IsSharable = true, 
            ExampleResponse = "0x885480")]
        Task<ResultWrapper<long?>> eth_blockNumber();
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Returns account balance", 
            IsSharable = true,
            ExampleResponse = "0x6c8ae945bfe6e")]
        Task<ResultWrapper<UInt256?>> eth_getBalance([JsonRpcParameter(ExampleValue = "[\"0x78467cada5f1883e79fcf0f3ebfa50abeec8c820\"]")] Address address, BlockParameter blockParameter = null);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Returns storage data at address. storage_index", 
            IsSharable = true, 
            ExampleResponse = "0x")]
        ResultWrapper<byte[]> eth_getStorageAt([JsonRpcParameter(ExampleValue = "[\"0x000000000000000000000000c666d239cbda32aa7ebca894b6dc598ddb881285\",\"0x2\"]")] Address address, UInt256 positionIndex, BlockParameter blockParameter = null);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Returns account nonce (number of trnsactions from the account since genesis) at the given block number", 
            IsSharable = true,
            ExampleResponse = "0x3e")]
        Task<ResultWrapper<UInt256?>> eth_getTransactionCount([JsonRpcParameter(ExampleValue = "[\"0xae3ed7a6ccdddf2914133d0669b5f02ff6fa8ad2\"]")] Address address, BlockParameter blockParameter = null);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Returns number of transactions in the block block hash", 
            IsSharable = true, 
            ExampleResponse = "0x20")]
        ResultWrapper<UInt256?> eth_getBlockTransactionCountByHash(
            [JsonRpcParameter(ExampleValue = "[\"0x199c2ef63392fb67f929fe0580e11f62fa6c54b9951a624896da91375a6805b1\"]")] Keccak blockHash);
        
        [JsonRpcMethod(IsImplemented = true, 
	    Description = "Returns number of transactions in the block by block number",        	    IsSharable = true,
            ExampleResponse = "0x20")]
        ResultWrapper<UInt256?> eth_getBlockTransactionCountByNumber([JsonRpcParameter(ExampleValue = "[\"8934677\"]")] BlockParameter blockParameter);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Returns number of uncles in the block by block hash", 
            IsSharable = true, 
            ExampleResponse = "0x0")]
        ResultWrapper<UInt256?> eth_getUncleCountByBlockHash([JsonRpcParameter(ExampleValue = "[\"0xe495c3385bb9162103bc07989d7160c38759e017c37c7d0608268bd5989d6bed \"]")] Keccak blockHash);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Returns number of uncles in the block by block number", 
            IsSharable = true, 
            ExampleResponse = "0x0")]
        ResultWrapper<UInt256?> eth_getUncleCountByBlockNumber([JsonRpcParameter(ExampleValue = "[\"5127400\"]")] BlockParameter blockParameter);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Returns account code at given address and block", 
            IsSharable = true,
            ExampleResponse = "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80639b5c5520116100a2578063c465a85911610071578063c465a859146102ce578063e1e6ac371461035f578063f2fde38b14610372578063fcbec74314610385578063fe0d94c11461039857600080fd5b80639b5c5520146101fc578063a85c38ef1461020f578063a91ee0dc146102a8578063af8d67ae146102bb57600080fd5b8063715018a6116100e9578063715018a6146101925780637b1039991461019a5780638a53aaac146101c55780638d948dfb146101d85780638da5cb5b146101eb57600080fd5b806302978e5c1461011b578063163de5e5146101535780632e1a7d4d1461016a57806340e58ee51461017f575b600080fd5b61013e610129366004612030565b60086020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61015c60045481565b60405190815260200161014a565b61017d610178366004612030565b6103ab565b005b61017d61018d366004612030565b610781565b61017d610b39565b6001546101ad906001600160a01b031681565b6040516001600160a01b03909116815260200161014a565b6003546101ad906001600160a01b031681565b61015c6101e6366004611fe9565b610bad565b6000546001600160a01b03166101ad565b61017d61020a366004611f78565b610bde565b61029861021d366004612030565b6005602081815260009283526040928390208054845160c08101865260018301548152600283015493810193909352600382015494830194909452600481015460608301529182015460ff90811615156080830152600683015460a0830152600790920154909181169061010090046001600160a01b031684565b60405161014a9493929190612173565b61017d6102b6366004611f78565b610c8e565b6002546101ad906001600160a01b031681565b6103246102dc366004612030565b60066020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154905088565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c083015260e08201526101000161014a565b61017d61036d366004611f78565b610d39565b61017d610380366004611f78565b610de9565b61015c610393366004612060565b610ed3565b61017d6103a6366004612030565b611549565b60008181526008602052604090205460ff1661040e5760405162461bcd60e51b815260206004820181905260248201527f4f6374616e652e776974686472617720696e76616c6964206f7264657220696460448201526064015b60405180910390fd5b60008181526005602052604090206001600782015460ff16600381111561044557634e487b7160e01b600052602160045260246000fd5b1461049e5760405162461bcd60e51b8152602060048201526024808201527f4f6374616e652e776974686472617720696e76616c6964206f726465722073746044820152636174757360e01b6064820152608401610405565b600781015461010090046001600160a01b031633146104ff5760405162461bcd60e51b815260206004820152601c60248201527f4f6374616e652e776974686472617720696e76616c69642075736572000000006044820152606401610405565b600082815260066020818152604080842081516080808201845287548252835160c081018552600189015481526002890154818701526003808a01548287015260048a0154606083015260058a015460ff9081161515938301939093529689015460a08201529482019490945260078701549195946105e0949193889390850192169081111561059f57634e487b7160e01b600052602160045260246000fd5b60038111156105be57634e487b7160e01b600052602160045260246000fd5b81526007919091015461010090046001600160a01b0316602090910152611a45565b50600254604051637f19d98160e11b81526001600160a01b0380841660048301529294506000935091169063fe33b30290602401602060405180830381600087803b15801561062e57600080fd5b505af1158015610642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106669190611f94565b6002546004850154919250610688916001600160a01b03808516921690611b39565b60025460048481015460405163ef693bed60e01b81526001600160a01b0386811693820193909352602481019190915291169063ef693bed90604401602060405180830381600087803b1580156106de57600080fd5b505af11580156106f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107169190612048565b6005840155600254610736906001600160a01b0383811691166000611b39565b6007840154600584015461075d916001600160a01b03858116926101009092041690611c95565b4260068401556007840180546002919060ff19166001835b02179055505050505050565b60008181526008602052604090205460ff166107df5760405162461bcd60e51b815260206004820152601f60248201527f4f6374616e652e6578656375746520696e76616c6964206f72646572206964006044820152606401610405565b600081815260056020526040812090600782015460ff16600381111561081557634e487b7160e01b600052602160045260246000fd5b146108325760405162461bcd60e51b8152600401610405906120fb565b600781015461010090046001600160a01b031633146108935760405162461bcd60e51b815260206004820152601b60248201527f4f6374616e652e6578656375746520696e76616c6964207573657200000000006044820152606401610405565b600082815260066020818152604080842081516080808201845287548252835160c081018552600189015481526002890154818701526003808a01548287015260048a0154606083015260058a015460ff9081161515938301939093529689015460a0820152948201949094526007870154919594610933949193889390850192169081111561059f57634e487b7160e01b600052602160045260246000fd5b5050600254604051637f19d98160e11b81526001600160a01b0380841660048301529293506000929091169063fe33b30290602401602060405180830381600087803b15801561098257600080fd5b505af1158015610996573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ba9190611f94565b60025460018501549192506109dc916001600160a01b03808516921690611b39565b600254600184015460405163ef693bed60e01b81526001600160a01b038581166004830152602482019290925291169063ef693bed90604401602060405180830381600087803b158015610a2f57600080fd5b505af1158015610a43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a679190612048565b60028085019190915554610a89906001600160a01b0383811691166000611b39565b6007840154600284015460405163a9059cbb60e01b81526101009092046001600160a01b039081166004840152602483019190915283169063a9059cbb90604401602060405180830381600087803b158015610ae457600080fd5b505af1158015610af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1c9190612014565b504260068401556007840180546003919060ff1916600183610775565b6000546001600160a01b03163314610b635760405162461bcd60e51b81526004016104059061213e565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60076020528160005260406000208181548110610bc957600080fd5b90600052602060002001600091509150505481565b6000546001600160a01b03163314610c085760405162461bcd60e51b81526004016104059061213e565b6001600160a01b038116610c6c5760405162461bcd60e51b815260206004820152602560248201527f6f6374616e652e7365744c656e6448616e646c6572203a20696e76616c69642060448201526476616c756560d81b6064820152608401610405565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610cb85760405162461bcd60e51b81526004016104059061213e565b6001600160a01b038116610d195760405162461bcd60e51b815260206004820152602260248201527f6f6374616e652e7365745265676973747279203a20696e76616c69642076616c604482015261756560f01b6064820152608401610405565b50600180546001600160a01b031981166001600160a01b03909116179055565b6000546001600160a01b03163314610d635760405162461bcd60e51b81526004016104059061213e565b6001600160a01b038116610dc75760405162461bcd60e51b815260206004820152602560248201527f6f6374616e652e7365745377617048616e646c6572203a20696e76616c69642060448201526476616c756560d81b6064820152608401610405565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610e135760405162461bcd60e51b81526004016104059061213e565b6001600160a01b038116610e785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610405565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001546040516321c3764d60e11b8152600481018790526000916001600160a01b031690634386ec9a9060240160206040518083038186803b158015610f1857600080fd5b505afa158015610f2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f509190612014565b610f9c5760405162461bcd60e51b815260206004820152601f60248201527f4f6374616e652e6f70656e203a20696e76616c6964206d61726b6574206964006044820152606401610405565b60008511610ff75760405162461bcd60e51b815260206004820152602260248201527f4f6374616e652e6f70656e203a20696e76616c6964206c696d697420616d6f756044820152611b9d60f21b6064820152608401610405565b600084116110515760405162461bcd60e51b815260206004820152602160248201527f4f6374616e652e6f70656e203a20696e76616c6964206c696d697420707269636044820152606560f81b6064820152608401610405565b60045461105f906001611cc5565b600481815560015460405163b1283e7760e01b81529182018990529192506000918291829182916001600160a01b039091169063b1283e7790602401604080518083038186803b1580156110b257600080fd5b505afa1580156110c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ea9190611fb0565b91509150851561111a57611110670de0b6b3a764000061110a8a8c611cd8565b90611ce4565b9350809250611121565b8893508192505b604051636eb1769f60e11b815233600482015230602482015284906001600160a01b0385169063dd62ed3e9060440160206040518083038186803b15801561116857600080fd5b505afa15801561117c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a09190612048565b10156111fa5760405162461bcd60e51b8152602060048201526024808201527f4f6374616e652e6f70656e203a20696e76616c6964207573657220616c6c6f77604482015263616e636560e01b6064820152608401610405565b60006040518060c001604052808c81526020018b81526020018a81526020014281526020018815158152602001898152509050600060405180608001604052808881526020018381526020016000600381111561126757634e487b7160e01b600052602160045260246000fd5b8152602001336001600160a01b031681525090506000604051806101000160405280898152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090506112e0333089896001600160a01b0316611cf0909392919063ffffffff16565b6002546112fa906001600160a01b03888116911689611b39565b600254604051633b4da69f60e01b81526001600160a01b038881166004830152602482018a905290911690633b4da69f90604401602060405180830381600087803b15801561134857600080fd5b505af115801561135c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113809190612048565b60208201526002546113a0906001600160a01b0388811691166000611b39565b6004805460009081526008602090815260408083208054600160ff199182168117909255855485526005808552948390208851815588850151805182850155948501516002820155848401516003808301919091556060860151978201979097556080850151958101805483169615159690961790955560a090930151600685015590860151600784018054889692949193911691849081111561145457634e487b7160e01b600052602160045260246000fd5b0217905550606091820151600791820180546001600160a01b0390921661010002610100600160a81b0319909216919091179055600480546000908152600660208181526040808420885181558883015160018281019190915589830151600283015597890151600382015560808901518187015560a0890151600582015560c08901519381019390935560e08801519286019290925533835293845280822083548154968701825590835291849020909401555491519182527fc748f0a8b97c1904dd237e3f73cc85d06a6d4d888bc852c3fdca8ecfaf78e2c3910160405180910390a15050505050505095945050505050565b60008181526008602052604090205460ff166115a75760405162461bcd60e51b815260206004820152601f60248201527f4f6374616e652e6578656375746520696e76616c6964206f72646572206964006044820152606401610405565b600081815260056020526040812090600782015460ff1660038111156115dd57634e487b7160e01b600052602160045260246000fd5b146115fa5760405162461bcd60e51b8152600401610405906120fb565b600082815260066020818152604080842081516080808201845287548252835160c081018552600189015481526002890154818701526003808a01548287015260048a0154606083015260058a015460ff9081161515938301939093529689015460a08201529482019490945260078701549195948594859461169c948a9391850192169081111561059f57634e487b7160e01b600052602160045260246000fd5b600254604051637f19d98160e11b81526001600160a01b038086166004830152949750929550909350600092169063fe33b30290602401602060405180830381600087803b1580156116ed57600080fd5b505af1158015611701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117259190611f94565b6002546001870154919250611747916001600160a01b03808516921690611b39565b600254600186015460405163ef693bed60e01b81526001600160a01b038781166004830152602482019290925291169063ef693bed90604401602060405180830381600087803b15801561179a57600080fd5b505af11580156117ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d29190612048565b600280870191909155546117f4906001600160a01b0383811691166000611b39565b6003546002860154611814916001600160a01b0387811692911690611b39565b6003546002860154604051630df791e560e41b81526001600160a01b0387811660048301528681166024830152604482019290925291169063df791e5090606401602060405180830381600087803b15801561186f57600080fd5b505af1158015611883573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a79190612048565b600380870191909155546118c9906001600160a01b0386811691166000611b39565b60006118ee8361110a670de0b6b3a76400008960030154611cd890919063ffffffff16565b600588015490915060ff1661190a576003870154811015611913565b60038701548111155b61195f5760405162461bcd60e51b815260206004820152601c60248201527f4f6374616e652e6578656375746520696e76616c6964207072696365000000006044820152606401610405565b600254600387015461197f916001600160a01b0387811692911690611b39565b6002546003870154604051633b4da69f60e01b81526001600160a01b0387811660048301526024820192909252911690633b4da69f90604401602060405180830381600087803b1580156119d257600080fd5b505af11580156119e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0a9190612048565b6004870155600254611a2a906001600160a01b0386811691166000611b39565b50504260079485015550505001805460ff1916600117905550565b60015460208201515160405163b1283e7760e01b8152600481019190915260009182918291829182916001600160a01b03169063b1283e7790602401604080518083038186803b158015611a9857600080fd5b505afa158015611aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad09190611fb0565b9150915085602001516080015115611b1e57611b11670de0b6b3a764000061110a886020015160200151896020015160400151611cd890919063ffffffff16565b9250809450819350611b30565b85602001516020015192508194508093505b50509193909250565b801580611bc25750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015611b8857600080fd5b505afa158015611b9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc09190612048565b155b611c2d5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610405565b6040516001600160a01b038316602482015260448101829052611c9090849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611d2e565b505050565b6040516001600160a01b038316602482015260448101829052611c9090849063a9059cbb60e01b90606401611c59565b6000611cd182846121fd565b9392505050565b6000611cd18284612235565b6000611cd18284612215565b6040516001600160a01b0380851660248301528316604482015260648101829052611d289085906323b872dd60e01b90608401611c59565b50505050565b6000611d83826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e009092919063ffffffff16565b805190915015611c905780806020019051810190611da19190612014565b611c905760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610405565b6060611e0f8484600085611e17565b949350505050565b606082471015611e785760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610405565b843b611ec65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610405565b600080866001600160a01b03168587604051611ee291906120ac565b60006040518083038185875af1925050503d8060008114611f1f576040519150601f19603f3d011682016040523d82523d6000602084013e611f24565b606091505b5091509150611f34828286611f3f565b979650505050505050565b60608315611f4e575081611cd1565b825115611f5e5782518084602001fd5b8160405162461bcd60e51b815260040161040591906120c8565b600060208284031215611f89578081fd5b8135611cd181612296565b600060208284031215611fa5578081fd5b8151611cd181612296565b60008060408385031215611fc2578081fd5b8251611fcd81612296565b6020840151909250611fde81612296565b809150509250929050565b60008060408385031215611ffb578182fd5b823561200681612296565b946020939093013593505050565b600060208284031215612025578081fd5b8151611cd1816122ae565b600060208284031215612041578081fd5b5035919050565b600060208284031215612059578081fd5b5051919050565b600080600080600060a08688031215612077578081fd5b85359450602086013593506040860135925060608601359150608086013561209e816122ae565b809150509295509295909350565b600082516120be818460208701612254565b9190910192915050565b60208152600082518060208401526120e7816040850160208701612254565b601f01601f19169190910160400192915050565b60208082526023908201527f4f6374616e652e6578656375746520696e76616c6964206f726465722073746160408201526274757360e81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600061012082019050858252845160208301526020850151604083015260408501516060830152606085015160808301526080850151151560a083015260a085015160c0830152600484106121d857634e487b7160e01b600052602160045260246000fd5b8360e08301526121f46101008301846001600160a01b03169052565b95945050505050565b6000821982111561221057612210612280565b500190565b60008261223057634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561224f5761224f612280565b500290565b60005b8381101561226f578181015183820152602001612257565b83811115611d285750506000910152565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146122ab57600080fd5b50565b80151581146122ab57600080fdfea2646970667358221220cdf303b947e70d0218247fdba4ef107cd233477fbe5f39b3a9958c49e635d07364736f6c63430008040033")]
        ResultWrapper<byte[]> eth_getCode([JsonRpcParameter(ExampleValue = "[\"0x965e7ad63b1b484ee7a94bb56d6a3ab9c69d46da\"]")] Address address, BlockParameter blockParameter = null);
        
        [JsonRpcMethod(IsImplemented = false, Description = "Signs a transaction", IsSharable = true)]
        ResultWrapper<byte[]> eth_sign(Address addressData, byte[] message);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Send a transaction to the tx pool and broadcasting", 
            IsSharable = true,
            ExampleResponse = "0x03783fac2efed8fbc9ad443e592ee30e61d65f471140c10ca155e937b435b760")]
        Task<ResultWrapper<Keccak>> eth_sendTransaction([JsonRpcParameter(ExampleValue = "[{\"From\": \"0xc2208fe87805279b03c1a8a78d7ee4bfdb0e48ee\", \"Gas\":\"21000\",\"GasPrice\":\"20000000000\", \"Nonce\":\"23794\", \"To\":\"0x2d44c0e097f6cd0f514edac633d82e01280b4a5c\"}]")] TransactionForRpc rpcTx);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Send a raw transaction to the tx pool and broadcasting", 
            IsSharable = true,
            ExampleResponse = "0x7a5a94d5b5e3ce017ce2c2022f02ec5db10611c43695c3256861bdb19317ab0e"
            )]
        Task<ResultWrapper<Keccak>> eth_sendRawTransaction([JsonRpcParameter(ExampleValue = "[\"0xf86380843b9aca0082520894b943b13292086848d8180d75c73361107920bb1a80802ea0385656b91b8f1f5139e9ba3449b946a446c9cfe7adb91b180ddc22c33b17ac4da01fe821879d386b140fd8080dcaaa98b8c709c5025c8c4dea1334609ebac41b6c\"]")] byte[] transaction);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Executes a tx call (does not create a transaction)", 
            IsSharable = false,
            ExampleResponse = "0x")]
        ResultWrapper<string> eth_call([JsonRpcParameter(ExampleValue = "[{\"from\":\"0x0001020304050607080910111213141516171819\",\"gasPrice\":\"0x100000\", \"data\": \"0x70a082310000000000000000000000006c1f09f6271fbe133db38db9c9280307f5d22160\", \"to\": \"0x0d8775f648430679a709e98d2b0cb6250d2887ef\"}]")] TransactionForRpc transactionCall, BlockParameter? blockParameter = null);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Executes a tx call and returns gas used (does not create a transaction)", 
            IsSharable = false,
            ExampleResponse = "0x")]
        ResultWrapper<UInt256?> eth_estimateGas([JsonRpcParameter(ExampleValue =  "[\"{\"from\": \"0x0001020304050607080910111213141516171819\", \"gasPrice\": \"1048576\", \"to\": \"0x0d8775f648430679a709e98d2b0cb6250d2887ef\"}\"]")] TransactionForRpc transactionCall, BlockParameter? blockParameter = null);
        
        [JsonRpcMethod(IsImplemented = true,
            Description = "Creates an [EIP2930](https://eips.ethereum.org/EIPS/eip-2930) type AccessList for the given transaction",
            EdgeCaseHint = "If your transaction has code executed, then you can generate transaction access list with eth_createAccessList. If you send it with your transaction then it will lower your gas cost on Ethereum",
            IsSharable = false,
            ExampleResponse = "{\"accessList\":[{\"address\":\"0xfffffffffffffffffffffffffffffffffffffffe\",\"storageKeys\":[\"0x0000000000000000000000000000000000000000000000000000000000000001\",\"0x0000000000000000000000000000000000000000000000000000000000000002\"]},{\"address\":\"0x76e68a8696537e4141926f3e528733af9e237d69\",\"storageKeys\":[]}],\"gasUsed\":\"0xf71b\"}")]
        ResultWrapper<AccessListForRpc> eth_createAccessList( 
            [JsonRpcParameter(Description = "Transaction's details", ExampleValue = "[\"{\"type\":\"0x1\"]")]
            TransactionForRpc transactionCall,
            [JsonRpcParameter(Description = "(optional)")]
            BlockParameter? blockParameter = null,
            [JsonRpcParameter(Description = "(optional)")]
            bool optimize = true);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Retrieves a block by hash", 
            IsSharable = true,
            ExampleResponse = "{\"author\":\"0x0000000000000000000000000000000000000000\",\"difficulty\":\"0x1\",\"extraData\":\"0x000000000000436f6e73656e5379732048797065726c656467657220426573754d3f7b71165a8266fcc569c96b6fcf9971ee4a8df59eeec4dcced0df8d778733429988e21d0124918859f988be9debf4b25fb5282ea41a2fc15f827f446ec93200\",\"gasLimit\":\"0x1c9c364\",\"gasUsed\":\"0x3aa87\",\"hash\":\"0xf33507f93a046dbdbb80dee5f47b84283297f6c53f1b665adc3cb6fe4138aa84\",\"logsBloom\":\"0xminer\":\"0x0000000000000000000000000000000000000000\",\"mixHash\":\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"nonce\":\"0x0000000000000000\",\"number\":\"0x4e3d79\",\"parentHash\":\"0x01dba3a7eb61dc6dba3f9663c8fb632f76f60a476f57df74c3e5bd9d0a246339\",\"receiptsRoot\":\"0x70f3bd929735d8edeb953cd30a27e703e7dd3ec4af32cb74fe8ac302f9e7fb87\",\"sha3Uncles\":\"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\"size\":\"0x754\",\"stateRoot\":\"0x71af7e25302d1baa4c988c267450eb2c7fa20938fac377809c8d77f8ff8108ac\",\"totalDifficulty\":\"0x726275\",\"timestamp\":\"0x60ec1218\",\"baseFeePerGas\":\"0x7\",\"transactions\":[\"0xa65d391d8149ed0906fab923e870d2bc7f6d27c2be10fe1bcfc6f02869b38ef3\",\"0x369a89354041b7a8cb40edce51c36ebb0ee6ffa4d8056f5a658d90f3bbe1a81a\",\"0xf857daf60d03381b9a6ecb341b62798b424d20dc05763858e13955dd866b489d\"],\"transactionsRoot\":\"0x90115f8dc10c08e748675f52f3904615729a014461ca80d72c60239bf75ee209\",\"uncles\":[]}")]
        ResultWrapper<BlockForRpc> eth_getBlockByHash([JsonRpcParameter(ExampleValue = "[\"0xf33507f93a046dbdbb80dee5f47b84283297f6c53f1b665adc3cb6fe4138aa84\"]")] Keccak blockHash, bool returnFullTransactionObjects = false);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Retrieves a block by number", 
            IsSharable = true,
            ExampleResponse = "{\"author\":\"0x0000000000000000000000000000000000000000\",\"difficulty\":\"0x1\",\"extraData\":\"0x000000000000436f6e73656e5379732048797065726c656467657220426573754d3f7b71165a8266fcc569c96b6fcf9971ee4a8df59eeec4dcced0df8d778733429988e21d0124918859f988be9debf4b25fb5282ea41a2fc15f827f446ec93200\",\"gasLimit\":\"0x1c9c364\",\"gasUsed\":\"0x3aa87\",\"hash\":\"0xf33507f93a046dbdbb80dee5f47b84283297f6c53f1b665adc3cb6fe4138aa84\",\"logsBloom\":\"0xminer\":\"0x0000000000000000000000000000000000000000\",\"mixHash\":\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"nonce\":\"0x0000000000000000\",\"number\":\"0x4e3d79\",\"parentHash\":\"0x01dba3a7eb61dc6dba3f9663c8fb632f76f60a476f57df74c3e5bd9d0a246339\",\"receiptsRoot\":\"0x70f3bd929735d8edeb953cd30a27e703e7dd3ec4af32cb74fe8ac302f9e7fb87\",\"sha3Uncles\":\"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\"size\":\"0x754\",\"stateRoot\":\"0x71af7e25302d1baa4c988c267450eb2c7fa20938fac377809c8d77f8ff8108ac\",\"totalDifficulty\":\"0x726275\",\"timestamp\":\"0x60ec1218\",\"baseFeePerGas\":\"0x7\",\"transactions\":[\"0xa65d391d8149ed0906fab923e870d2bc7f6d27c2be10fe1bcfc6f02869b38ef3\",\"0x369a89354041b7a8cb40edce51c36ebb0ee6ffa4d8056f5a658d90f3bbe1a81a\",\"0xf857daf60d03381b9a6ecb341b62798b424d20dc05763858e13955dd866b489d\"],\"transactionsRoot\":\"0x90115f8dc10c08e748675f52f3904615729a014461ca80d72c60239bf75ee209\",\"uncles\":[]}")]
        ResultWrapper<BlockForRpc> eth_getBlockByNumber([JsonRpcParameter(ExampleValue = "[\"5127545\"]")] BlockParameter blockParameter, bool returnFullTransactionObjects = false);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Retrieves a transaction by hash", 
            IsSharable = true, 
            ExampleResponse = "{\"hash\":\"0xabca23910646013d608ec671de099447ab60b2b7159ad8319c3c088e8d9ea0fa\",\"nonce\":\"0x1a\",\"blockHash\":\"0xcb6756f69e0469acd5e5bb77966be580786ec2c11de85c9ddfd75257010e34f8\",\"blockNumber\":\"0x4dfbc7\",\"transactionIndex\":\"0xb\",\"from\":\"0xe1e7ab1c643dbe5b24739fdf2a5c7c193b54dd99\",\"to\":\"0x0b10e304088b2ba2b2acfd2f72573faad31a13a5\",\"value\":\"0x0\",\"gasPrice\":\"0x2540be400\",\"gas\":\"0xb4a4\",\"data\":\"0x095ea7b300000000000000000000000092c1576845703089cf6c0788379ed81f75f45dd500000000000000000000000000000000000000000000000000000002540be400\",\"input\":\"0x095ea7b300000000000000000000000092c1576845703089cf6c0788379ed81f75f45dd500000000000000000000000000000000000000000000000000000002540be400\",\"type\":\"0x0\",\"v\":\"0x2d\",\"s\":\"0x496d72d435ead8a8a9a865b14d6a102c1a9f848681d050dbbf11c522c612235\",\"r\":\"0xc8350e831203fecc8bff41f5cf858ac1d121e4b4d9e59c1137cc9440516ca9fd\"}")]
        Task<ResultWrapper<TransactionForRpc>> eth_getTransactionByHash(
            [JsonRpcParameter(ExampleValue = "\"0xabca23910646013d608ec671de099447ab60b2b7159ad8319c3c088e8d9ea0fa\"")] Keccak transactionHash);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Returns the pending transactions list",
            IsSharable = true, 
            ExampleResponse = "[]")]
        ResultWrapper<TransactionForRpc[]> eth_pendingTransactions();
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Retrieves a transaction by block hash and index", 
            IsSharable = true,
            ExampleResponse = "{\"hash\":\"0xb87ec4c8cb36a06f49cdd93c2e9f63e0b7db9af07a605c8bcf1fbe705162344e\",\"nonce\":\"0x5d\",\"blockHash\":\"0xfe47fb3539ccce9d19a032473effdd6ce19e3c921bbae2746152ccf82ceef48e\",\"blockNumber\":\"0x4dfc90\",\"transactionIndex\":\"0x2\",\"from\":\"0xaa9a0f962e433755c843175488fe088fccf8526f\",\"to\":\"0x074b24cef703f17fe123fa1b82081055775b7004\",\"value\":\"0x0\",\"gasPrice\":\"0x2540be401\",\"gas\":\"0x130ab\",\"data\":\"0x428dc451000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000030000000000000000000000005d3c0f4ca5ee99f8e8f59ff9a5fab04f6a7e007f0000000000000000000000009d233a907e065855d2a9c7d4b552ea27fb2e5a36000000000000000000000000cbe56b00d173a26a5978ce90db2e33622fd95a28\",\"input\":\"0x428dc451000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000030000000000000000000000005d3c0f4ca5ee99f8e8f59ff9a5fab04f6a7e007f0000000000000000000000009d233a907e065855d2a9c7d4b552ea27fb2e5a36000000000000000000000000cbe56b00d173a26a5978ce90db2e33622fd95a28\",\"type\":\"0x0\",\"v\":\"0x2e\",\"s\":\"0x696f6db060a6dd30435a7f592506ba3213f81cf4704e211a1a45a99f8984189a\",\"r\":\"0x7e07076186e38b68cb7e4f68a04258a5744c5a2ad1a7153456ee662a07902954\"}")]
        ResultWrapper<TransactionForRpc> eth_getTransactionByBlockHashAndIndex(
            [JsonRpcParameter(ExampleValue = "[\"0xfe47fb3539ccce9d19a032473effdd6ce19e3c921bbae2746152ccf82ceef48e\",\"0x2\"]")] Keccak blockHash, UInt256 positionIndex);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Retrieves a transaction by block number and index", 
            IsSharable = true, 
            ExampleResponse = "{\"hash\":\"0xfd320a4949990929f64b52041c58a74c8ce13289b3d6853bd8073b0580aa031a\",\"nonce\":\"0x5b\",\"blockHash\":\"0xd779e1a5ce8f34544d66d219bb3e5331a7b280fae89a36d7d52813a23e1ca1e3\",\"blockNumber\":\"0x4dfdd8\",\"transactionIndex\":\"0x8\",\"from\":\"0xadb540569e2db497bd973c141b0b63be98461e40\",\"to\":\"0x074b24cef703f17fe123fa1b82081055775b7004\",\"value\":\"0x0\",\"gasPrice\":\"0x12a05f200\",\"gas\":\"0x927c0\",\"data\":\"0x428dc451000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000030000000000000000000000005d3c0f4ca5ee99f8e8f59ff9a5fab04f6a7e007f0000000000000000000000009d233a907e065855d2a9c7d4b552ea27fb2e5a36000000000000000000000000cbe56b00d173a26a5978ce90db2e33622fd95a28\",\"input\":\"0x428dc451000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000030000000000000000000000005d3c0f4ca5ee99f8e8f59ff9a5fab04f6a7e007f0000000000000000000000009d233a907e065855d2a9c7d4b552ea27fb2e5a36000000000000000000000000cbe56b00d173a26a5978ce90db2e33622fd95a28\",\"type\":\"0x0\",\"v\":\"0x2e\",\"s\":\"0x37b90a929884787df717c87258f0434e2f115ce2fbb4bfc230322112fa9d5bbc\",\"r\":\"0x5222eff9e16b5c3e9e8901d9c45fc8e0f9cf774e8a56546a504025ef67ceefec\"}")]
        ResultWrapper<TransactionForRpc> eth_getTransactionByBlockNumberAndIndex(
        [JsonRpcParameter(ExampleValue = "[\"5111256\",\"0x8\"]" )] BlockParameter blockParameter, UInt256 positionIndex);
        
        [JsonRpcMethod(IsImplemented = true, 
        Description = "Retrieves a transaction receipt by tx hash", 
        IsSharable = true,
        ExampleResponse = "{\"transactionHash\":\"0x80757153e93d1b475e203406727b62a501187f63e23b8fa999279e219ee3be71\",\"transactionIndex\":\"0x7\",\"blockHash\":\"0x42def051b21038905cd2a2bc28d460a94df2249466847f0e1bcb4be4eb21891a\",\"blockNumber\":\"0x4e3f39\",\"cumulativeGasUsed\":\"0x62c9d\",\"gasUsed\":\"0xe384\",\"effectiveGasPrice\":\"0x12a05f200\",\"from\":\"0x0afe0a94415e8974052e7e6cfab19ee1c2ef4f69\",\"to\":\"0x19e8c84d4943e58b035626b064cfc76ee13ee6cb\",\"contractAddress\":null,\"logs\":[{\"removed\":false,\"logIndex\":\"0x0\",\"transactionIndex\":\"0x7\",\"transactionHash\":\"0x80757153e93d1b475e203406727b62a501187f63e23b8fa999279e219ee3be71\",\"blockHash\":\"0x42def051b21038905cd2a2bc28d460a94df2249466847f0e1bcb4be4eb21891a\",\"blockNumber\":\"0x4e3f39\",\"address\":\"0x2ac3c1d3e24b45c6c310534bc2dd84b5ed576335\",\"data\":\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"topics\":[\"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\"0x00000000000000000000000019e8c84d4943e58b035626b064cfc76ee13ee6cb\",\"0x00000000000000000000000028078300a459a9e136f872285654cdc74463041e\"]},{\"removed\":false,\"logIndex\":\"0x1\",\"transactionIndex\":\"0x7\",\"transactionHash\":\"0x80757153e93d1b475e203406727b62a501187f63e23b8fa999279e219ee3be71\",\"blockHash\":\"0x42def051b21038905cd2a2bc28d460a94df2249466847f0e1bcb4be4eb21891a\",\"blockNumber\":\"0x4e3f39\",\"address\":\"0x19e8c84d4943e58b035626b064cfc76ee13ee6cb\",\"data\":\"0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007735940000000000000000000000000000000000000000000000000000000000000000000\",\"topics\":[\"0x950494fc3642fae5221b6c32e0e45765c95ebb382a04a71b160db0843e74c99f\",\"0x0000000000000000000000000afe0a94415e8974052e7e6cfab19ee1c2ef4f69\",\"0x00000000000000000000000028078300a459a9e136f872285654cdc74463041e\",\"0x0000000000000000000000000afe0a94415e8974052e7e6cfab19ee1c2ef4f69\"]}],\"logsBloom\":\"0xstatus\":\"0x1\",\"type\":\"0x0\"}")]
        Task<ResultWrapper<GetTransactionReceiptResponse>> eth_getTransactionReceipt([JsonRpcParameter(ExampleValue = "[\"0x80757153e93d1b475e203406727b62a501187f63e23b8fa999279e219ee3be71\"]")] Keccak txHashData);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Retrieves an uncle block header by block hash and uncle index", 
            IsSharable = true)]
        ResultWrapper<BlockForRpc> eth_getUncleByBlockHashAndIndex(Keccak blockHashData, UInt256 positionIndex);
        
        [JsonRpcMethod(IsImplemented = true, Description = "Retrieves an uncle block header by block number and uncle index", IsSharable = true)]
        ResultWrapper<BlockForRpc> eth_getUncleByBlockNumberAndIndex(BlockParameter blockParameter, UInt256 positionIndex);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Creates an update filter", 
            IsSharable = false,
            ExampleResponse = "0x9"
            )]
        ResultWrapper<UInt256?> eth_newFilter([JsonRpcParameter(ExampleValue = "[{\"toBlock\":\"latest\"}]" )] Filter filter);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Creates an update filter", 
            IsSharable = false, 
            ExampleResponse = "0x0")]
        ResultWrapper<UInt256?> eth_newBlockFilter();
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Creates an update filter", 
            IsSharable = false, 
            ExampleResponse = "0x1")]
        ResultWrapper<UInt256?> eth_newPendingTransactionFilter();
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Creates an update filter", 
            IsSharable = false)]
        ResultWrapper<bool?> eth_uninstallFilter(UInt256 filterId);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Reads filter changes", 
            IsSharable = true,
            ExampleResponse = "[]")]
        ResultWrapper<IEnumerable<object>> eth_getFilterChanges([JsonRpcParameter(ExampleValue = "[\"0x9\"]" )] UInt256 filterId);
        
        [JsonRpcMethod(IsImplemented = true, 
            Description = "Reads filter changes", 
            IsSharable = true,
            ExampleResponse = "[]")]
        ResultWrapper<IEnumerable<FilterLog>> eth_getFilterLogs([JsonRpcParameter(ExampleValue = "[\"0x9\"]")] UInt256 filterId);
        
        [JsonRpcMethod(IsImplemented = true, Description = "Reads logs", IsSharable = false)]
        ResultWrapper<IEnumerable<FilterLog>> eth_getLogs(Filter filter);
        
        [JsonRpcMethod(Description = "", IsImplemented = false, IsSharable = true)]
        ResultWrapper<IEnumerable<byte[]>> eth_getWork();
        
        [JsonRpcMethod(Description = "", IsImplemented = false, IsSharable = false)]
        ResultWrapper<bool?> eth_submitWork(byte[] nonce, Keccak headerPowHash, byte[] mixDigest);
        
        [JsonRpcMethod(Description = "", IsImplemented = false, IsSharable = false)]
        ResultWrapper<bool?> eth_submitHashrate(string hashRate, string id);
        
        [JsonRpcMethod(Description = "https://github.com/ethereum/EIPs/issues/1186", 
            IsImplemented = true, 
            IsSharable = true,
            ExampleResponse = " \"accountProof\": [\"0xf90211a0446f43a2d3e433732c75bcf3519f4844e0441a4d39b31395ee9a65700c30d3b4a0b9720db63afe9909418fb6e02c9d9f225310856549cc1b66b486041f2d867250a046e6e560e52d4fe0d2f6609f489ba85f18ad1655fee18452588dc08388fbd711a01e68f36c91bd15cbf65587d6db2a7cbd6635907291e77dd80152161da9a28a48a0d2178a1891c26ccaa2d2cec82c231a0640a26a1f5e07c7b5493761bdb3aa94e5a0fa909327d406980a2e602eadd3f56cf8dc89320d4662340962e9cac2beee3d8da0a0fc71e7dec6320a993b4b65b2f82544910d0a4a7c6f8c5a1ebaa38357d259e3a0680161dec84c5f1c8d5e2a585c9708b1b6fbc2dc664a432e045d99f5e7d89259a0f76a745765be58d46d795c44d3900a4a05b6396530244d50822616c8bbb11e19a0594824352d58f5caff819c8df9581b6a41d0e94eb584ed0431d48b48f320bb5ca0e762eb52b2bcacd728fac605de6229dc83588001ecddcd3b454b64c393ee69eda0d319cf1021af0a8535e4916c3404c84917957d73d0711f71fd6456b4533993bba0878240238a894e6fa798671ac3792563c6666a7c7fba8066d090b65d6a7aa701a03c03fdb4d8f4b241442814cbab24ddb42b75c78874f92fedc162b65d0820fc4da06a3318509aa9ff009b9acb9b348f197a134a46a46295714f436d4fbb19057e69a04139df1b6e0a59b093b35f34f9e5e890bc06832e63b366d768dc29e8638b828480\",\"0xf90211a023459f17e04fba3d19c6993f5be413969842fdbdc85d234a91b2f6b08a38be87a0153060eafecbff55ef0794802ef722b6c66698141cdc0610352d3a426976adeba0bd642b7c5111a1fd09da33feb6df031dc352b6cb20fbbe5ebe3eb328db233bd4a0705bff29e05c7ef69c07fecaa5db2457b2f124befc82f9fe6b0e54c8e35632eba03c1b4ffc076434de97050d2351c24689cfaefaa6cf8dc398dd3b8ce365e652c1a0a1ebf845ea0eb252e2a2e5c422ccd74878a3733144dfd62bcaad34758cc98652a01e4184586f5bdbb17ba74fd87539f02378c7adcef99f1538108f9555520e32d6a0b8acdfd5b644fa2c9a54f68039a3af4c6562c1e7f91ea9e63bda5a849f1260b6a05c1f036a2e7a5829799fc7df2d87eac3e7aee55df461b040c36f5b5c61781059a0a67fd871d32642e44120331f76c2616096d04d7fa1a7db421bafbc39713d8bfba085c15b7ab64f61670f4422adb82176d5808fad4abde6fddda507b0e5ff92ba14a0d95e8f16a39d4e52c67c617eef486adcd947854373ac074ff498150c7ca1ab5da03d9d7be595000872ad6aec05667ad85e1aaaeb2050a692818d3e60d8f1628d8ba0984c657192b052d13fb717051631d67fbc83dd5dcb4d074a2fddc01aa122d95ba03643408862d758aea269c05027a1cd616c957e0db5daea529b56964db8b4f04ba01020dce8d692c3d84d9ae3e42c35e4d8adbddf7b4dd3e09e543fc980849f016e80\",\"0xf90211a04c71b4b56ed723da1c1353ec1b4c23e71dfa821664d4041c1ee1770221f507b6a031c851f261a38df9b2bece1a1cb6985bccfaa10d2bb15954b82cd2ceaad87032a08a4a3d0cc260cf0e0fef54490ce45796fdd3f522451976ca7834563c839c630fa003d074f79074566cd33a3d6a57b6ca8426ca9ea972f66b5dfde00f73287fcfcea07003d29a5bd192038600118ab5941af5c79c1f0fc6184ad564180b809c36c7c4a05f181c50402dcff567abe1c6679a8d5e3825125abca4d969c7cbf76503416813a06a85dfca80e442ef79b66162099d52eaf67718589eb794755ce57dc071a85cdaa085cba9e6937a8a5f0a7d1b5ee9eb9f03c40f89eb13d9d4e0e5fbc574c2b852faa063f93dce441a3373cfc2d1c855884682dfd8d09d1eb9844c73d88eb8d5a7cdfda0e4bc0d2597e5fd0a4cd5e76a03b657ef8959264bdeaf95c4412ebd4ff736ce44a00239290e698aa04485e0c342cfb76ccf27a3e45a161b8b1b534e0c46707b92c8a0080c3439fb84730924539797aad8d017c5f7e008314ed9086450d80ec2b0d7aba0861dbe37b9b9e0f58b6fdb83eec28045c5f7f1861530f47f78fc8a2b18a6bd8da0036697e8dc063e9086d115d468c934a01123adb3c66dcc236ee4aa8141888626a033c6f574ee79d9b1322e9ca1131a5984b33cc8881e6ac8ebd6ca36f3437cedcda07fc2855e6bb0f276202094dffe49f2b62f2366d9aba9db3ffe76d62bcdc29f0d80\",\"0xf90211a06995d919b53eefa0b097d75c2a5dee2c54109a06d3b60586327fa0086437b801a05c7d7c92f9f1e49cf27c5d97b4a96302f033d42df5b1d7c013ef05031d67e567a05278417d007913a1e7d6606fb464e7b81f6cee91b6a1d250c67b3822d9fc68d8a0fba6d9cd68fe72db07af9d99e30c32502e0afb15ee9712f6781014195444b9e1a07dca25ba23f429b5960d9feb23367e2a088e50211f280118b7f1703e6d47103fa0399eb6e0d4390688f6b28df56c7ad72d6b6cbac9066110c6a727fe35cd889e9da08ef84ddaa3b70095fb5624878289744740a9f8761ef1132ba722abc977a218ffa04296811ae184892e2d5ecc18d05fc6279d6168eb0f3abb1f97d8d0a0721c12fba05c46766c579b8a0b8a0b79b84f6cd1e5dae1c53a2988883b0385daa2cf3bdf82a01a4ba17dd1b59147a321dd374a22a0d959f1a79d70132db7f1a8b89968ff6062a0f7ffc6f3921c6bccd47c862519409e63f51d39aaa215819c664b1adb48a940b0a0dc6e636385407900a649917fb772b0972d50d197e9fd5cdb853a1c98a29e6a47a0674b224cf784c59ca937bfebbdcd8dec05ddbd57400b04f5965558a0c2d2299ca0f95ce8c921c5b17ebf74563f2496a88631aa6a697bfd9e3e22b326efa453115ea0fc133bc6b9dd098933c816660df2959074f47dfc4ab3a10fd2059a2b2e0e911aa057cac15218d6013890df78eec099144ba2000e3eea73a3498d0eb9b1f733459080\",\"0xf90211a0400aafe69a1a482277db720d12b9c0b98695f5dd78c6faf5421b3ddac50165a6a0235987542e4b37aa8e6957776c9dff11d6818797db5ad505de5e0049045c7e20a0f573b4776f8b323b7d55850300d53855cfa6fa5fe6e36ba64da6bb263fef774aa0b3a36d14d660c3492785b0f1488a2231b6d83bd51268685b95ba9267aa331fe2a0096e8c65bae8fce7d234710a1e1b8c98bd4fb2d56f8bb2eda7ef20d1cf31c7e2a059194c8bf50c2ac393c4c60a59c7ddf0c515bd9f545fc4ef212629a8b96af62aa0ffe882f4e2f1e8e49c7777f6f9b4438a9f31d4e5cefe82c96fdd3587d9a95173a00127ced7fdbdd57cd5ed8b766c9312c09e0c67a350087d22b4cc7b2d17a45479a0cfc030a250448838caa716cd2767cd1a4837b29019f474980720c94fe2ce412ea079ec358d2b4122692bf70eb73a0ddb0ff4bfeb05d503fe1acafe068e2d3d33cfa0733e2ccdc638ca3c940c566c742a1b9d58f7caaa062e8a121c07f5e3367160a8a0aa1f403798b71c67b821e6f6128cc5366bebe145ebd563714cf9972b2474814ea01b988afc628922aeed3de606a8a462093f1c0c803a563bbe178552a360bad1e1a0082741e2219024bf4e19f5b1b0643e5e885cb7dfb4cdc0a51faf5bd9f92ff9b6a03c86490fe8f0256be44b95815086d95cb62fdbc3ede63ca08d12d68f274b7fc5a03a81565e860ac32921ed4c9f4e0ace3b341c342abd030d4955f2d1e64dd81d2b80\",\"0xf8f1a0bd9a0d9559513a6c7bf427816142d254d5a9049e9ff385f3514b50cb828951fc808080a07d37353f509c9bdc99635bd75fde71a6ef99271154ac4ffd5c437e0b951d5eaca029e3beec2f52c99a1fa73251ed64486f2766af3dcb950900679f7fd740badfdaa09b348c93803521a41bd2a754e3ea5435bb2663724cdfb70a87984458b53f03dea0904e696aceac8c89e2825e0dae8add52a9b46faef2ffbabb932e8bc1267e48ba80a0935dedba6ec5fb5b89285993c5f1be0cb77492e63e11bb38b5aca18011699eb8a06b52f587932dfb669f6cbefe35b251c6d8e6b5e8a2e1c1a7c2a452a4f2917b0d808080808080\"],\"address\":\"0x7f0d15c7faae65896648c8273b6d7e43f58fa842\",\"balance\":\"0x0\",\"codeHash\":\"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\"nonce\":\"0x0\",\"storageHash\":\"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\"storageProof\":[{\"key\":\"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\"proof\":[],\"value\":\"0x00\"]")]
        ResultWrapper<AccountProof> eth_getProof([JsonRpcParameter(ExampleValue = "[\"0x7F0d15C7FAae65896648C8273B6d7E43f58Fa842\",[  \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\" ],\"latest\"]")] Address accountAddress, byte[][] hashRate, BlockParameter blockParameter);
    }
}
